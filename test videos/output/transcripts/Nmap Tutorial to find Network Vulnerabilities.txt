 With just one command, I scanned my entire network, found my hacking targets, found out what operating systems are running, what ports are open, and even found vulnerabilities that I can exploit. That is the power of Enmap, a free essential tool for hackers and pretty much anyone in IT. Let's get started! You need to learn, learn, learn hacking. Inmap, or network-mapper is a tool used by hackers to scan networks so we can find live hosts or find targets to hack. And we can also use this tool to find out more information about these targets, a process called enumeration. So in this video we're going to break down inmap, I'll show you how to use it, I'll show you how it works. Let's do it. Oh and by the way, if you want to go deeper than what I'm showing you here, check out ITProTV. They are the sponsor of my hacking journey, they're my primary learning source, and if you use my link below or code network, check you'll get 30% off everything, forever. So check them out. Oh and by the way, you can install enmap anywhere. Windows, macOS, Linux, and you're going to see me using Cali. Enmap is amazing. Let me show you why. Let's say I have a server on my network, and I do. 10.7.1.226. How would I typically find out if that host is there up and running? Why would you just use ping, right? Ping 10.7.1.226. Okay, bam, I'm getting response, it's up. Now that's fine for pinging one device, but what if I want to ping an entire network? It becomes kind of a problem. So my home network here is 10.7.1.0 slash 24, which means that this network could have 254 host, or endpoints that I could attack. Again, who wants to sit here and ping 254 host? Not this guy, so let's use enmap. I'll use a command enmap and then a switch. It'll be lowercase s capital p, and then my network. And go. And in 2.71 seconds, I found out that a 15 host were up. Here's the list right here. That's amazing. Do it in your network right now. Okay, all right. We automated the pinging of host in a network. Big deal, Chuck. You're right. Enmap can do a lot more. A lot more like check this out. You see, as a hacker, just knowing these hosts are up is not good enough for me. I need more info than that. If I look at the scanning methodology that the EC council goes by, we just covered step one, checking if systems are alive. But now we want to look at step two. Check for open ports. Let's say my goal is to hack websites. And I want to find all endpoints or servers in my network that are running a website. What am I going to look for? Well, typically look for port like 80 or port 4443. These ports will typically be open on a server if they're running a website. That's how people access them by accessing those ports. Within map, we can find that information super fast. Check this out. I'm going to throw a pseudo in here and then do in map, dash or tick, lowercase s, capital T. I'll explain that here in a moment. And then say I'm looking for servers using port 80 and 4443. I'll do a dash P and then 80 and 443. And then I'll specify my network 10.7.1.0 slash 24. Let's go. Oh, pseudo password. Now let's go. Coffee break. That was incredibly fast. Oh my gosh. 2.39 seconds. Yes. Okay. So what do we find? Here's the scan report for the host 10.7.1.211. And we can see that poor 80 and 4443 are both closed. So probably not a web server. Safe to assume. But host 271.226. BAM. Both of these ports are open. Probably maybe a web server. And we can quickly scroll through our results to see what other open ports we have. Like here's another one and it just has port 443 open. Now this is cool, but even cooler is how it actually works. Check this out. Looking at my end map command, I use the switch dash st or tick st. This is a type of port scan called a TCP connect, where you might see it as a full open scan. And the magic is in the TCP using the three-way handshake. I just said a lot of words. What is all that? If you don't know, I'm going to cover it real quick right now. Let's first start with what is TCP. It's a protocol, the transport control protocol. And what you got to know about it right now is that when, let's say, my computer wants to talk to a server or even another computer. It's a TCP protocol, a networking protocol that tells us how we communicate. How do we start the conversation? How do we keep it going? The rules for starting and establishing this conversation are often referred to as the three-way handshake. And it's what end map actually uses to do all its magic. Check if ports are open. And essentially here's how it works. Let's say this is a web server and it's serving up davidbomble.com. If I want to visit davidbomble.com, I have to start a conversation with that server. So I'll start out by sending davidbomble.com a message saying, davidbomble.com. Hey, I got something to tell you. I want to talk to you. Are you there? And this is referred to as a sin packet or a synchronization message. Now because davidbomble.com is a web server, I want to talk to him on port 443. So that's where I'm sending this. I'm saying, hey, davidbomble.com on port 443, are you awake? If he is, if he's listening on that port, he should respond. Saying, yep, I am awake. I am here. I'm ready to talk. This is referred to as a sin act. And I'm like, yeah, yeah, let's talk. Let's do this. So I respond back with the act act. I'm here. I'm ready. Let's talk. Three-way handshake. And this is what MAP uses to see if the ports are open. Now we have a little bit of a problem. You see commands like this, scans like this on a network might be a bit intrusive. You see security features like an IDS, which is an intrusion detection system. That's often built into firewalls. Might catch onto this. Might get you in trouble. Might stop you in your tracks. But we can be a bit more stealthy. Here's what we can do. Well, instead of using the switch, dash ST will use a switch dash SS. So lowercase S, capital S, and then our ports, and our network. S is for stealthy. That's actually the type of scan that says it's a stealth scan or often referred to as a sin scan or a half open scan as opposed to the full open scan that we just did. The difference being that when in MAP goes to initiate a three-way handshake. We'll see our host here is 10.7.1.1. We'll send our send message, our send packet. Let's say port 80. And then hopefully the host responds back with a sin act. Because we're being stealthy, we're going to say, never mind. And just walk away. We're not going to do the full complete TCP connection. You see to communicate with TCP, you have to complete that three-way handshake to establish a connection. If that three-way handshake is not completed, then there's no connection. So we're hoping that by not completing that connection or completing the three-way handshake process, we avoid firewalls going. Hey, what are you doing down there? That's the idea. Our security and firewalls become more advanced. And sometimes they can even catch on if we do this. So keep that in mind. But this is a way to avoid that issue. Let's do it real quick. Bam. Ah, pseudo. Stealthy. We scan the entire network. And they didn't even see us coming. Or going or leaving. Now I want to show you real quick the traffic that we're generating when we do this. I want to actually show you what it looks like. We'll use wire shark to capture it. And then I'll show you. So let's do it real quick. I want to show you the difference. I want to change up my command just a little bit. I'm still going to do ST, which if you remember is the full connection. But this time I'm not going to specify a port. And I'm not going to scan my entire network. I'll just scan one host, 10.7.1.226. If I don't specify a port, nothing bad happens. It just will automatically by default scan the top 1000 ports or most popular ports. And seeing that number make you think, wow, it's going to take forever. And actually doesn't. Let's do it real quick. I'll click go. And it's done. I told you. 0.17 seconds. Now I'll do it again with wire shark running. All right, I'm capturing packets. Let's do that one more time. Done. I'm going to filter by this IP address. And we'll look at one of these conversations here. And it's beautiful. Just like what we talked about. Here's my in-map. Here's my target. Port 443. I've got my send message. I get a send-ac back from my target. And then I send an ac back saying, everything's good, buddy. Let's talk on port 443. A full TCP connect. And then I'm like, you know, I didn't have much to say. I'm going to end this conversation. This flag right here, this RST, is another flag that is just a reset or ending the conversation on a TCP conversation. Now let's check out the stealthy one. Let's start my capture again. And then go back to my commands here. This time we'll do dash S, big S. And go. Same results. Let's see what happened. Crazy looking, huh? Let's check that same port and follow that path, that conversation. It's a little bit different, right? I started out the same way. I'm like, hey, you want to talk on 443? I got a send message. Here it applies back. Yeah, yeah, let's talk. My port's wide open. And then I'm like, psych. Never mind. I don't want to have that connection. That session established. I don't want to get caught. I'm just poking my head in the window, looking around, and I'm coming out. And you're probably tired of hearing me say this, but endmap can do a lot more. Like, look at this. If you look at the manual page by typing in man, endmap. You can go through and look at all these switches you can use and all the crazy things you can do. Like, for example, I can search for, let's do dash O. With this switch, I can enable OS detection and find out what OS is my targets are using, which is obviously really helpful. Let's try it up. Sudo and map dash capital O and my host. Go. Done. So I did a few things here. First, it pinged the host, saying, hey, it's up. So it used ping. I went ahead and checked if ports are open. So it's using TCP, three way handshakes. And then it did its best to guess. And it's pretty accurate. What OS this thing was using or is using. Now, this is a Linux machine. Let's try a Windows machine. It does work on Windows. Let's try it. I have a domain controller on my other network. 10.77.1.11. And this one's obviously pretty stinkin' fun. It found a lot of ports that you might find open on a domain controller, because it is doing a lot. And it learned that I'm using Windows Server 2012 R2, which is pretty crazy, right? But wait, there's more. Let's get back to our man page. Man and map. I'm a search for dash A. This one's a combo search. It will do dash O, which is OS detection. It'll check for versions of protocols. I'll show you what that means here in a second. Script scanning and trace route. All those words will look at it right now. Sudo and map. Dash A. And my host. And go. Now, this one was busy. It was doing a lot. 128 seconds. But let's check out what we found. Found some pretty amazing stuff. We've got the SSH host key. The version of SSH we're using. It learned that we're using Apache on port 80. Red Hat Linux. Doing some file sharing. Look at that. And then to top it all off, we have a trace route to see how far away it is from us and the network. That's amazing. Let's do my Windows machine real quick. Same command. Different host. Different network. Let's do it. Now, these can take a while. If you're like, is it still working? Did it freeze? What's going on? You can hit enter anytime. Maybe. I'll give it a second to breathe. It'll tell you how fast it's going. The progress. 68% done. 25% earlier. How much time is left? Let's do it again. But I'll let it do its thing. Okay. Just taking forever. Come on. It's done. Finally done. Oh my gosh. It took 303 seconds. It's, or seven. I can read numbers. I promise. 307 seconds. What did I find out? That's a lot of stuff found out. Oh my gosh. So I found out all the versions of whatever I'm using for the protocols. Of course, it's all Microsoft based. And look at all this info it found. That's awesome. My common name here. All my SSL cert. Even the expiration. My SMB information, which is my file share. Oh my gosh. And then a nice little trace route. So cool. I love this. Okay. I want to show you just two more things. Okay. So stick around. Here we go. The first thing is that you can have a decoy. Because as you're scanning a network, you want to avoid being found. It's called Obfuscation. I can never say that word. Obfuscation. Yeah. Just basically covering your tracks, making sure people can't find you easily. Because hey, if you're scanning a network and you're sending all that traffic. Something might pick you up. Well, let's get them off the trail. So let's do another port scan. I'll do a pseudo end map. I'll do it in a dash. S. T for a full TCP connection. And actually, let's go stealthy. We don't want them to find us. That's the point, right? And we'll use the command dash D, which stands for decoy. And we'll put in a decoy IP address. Let's just say 10.7.1. This is nothing. 80. And then I'll put in my target. 10.7.1.226. And this is cool because what it will do is it will still send messages for me. Putting in the packets that I am the sender, right? I'm the source. But it will also send another one. A duplicate. Changing the source to 10.7.1.80. So if someone is looking through traffic on the network and going, man, there's a lot of traffic from that one host. Well, you can add decoys to where like, there's a lot of traffic from all these hosts, which one's doing it. I don't know. That's the big idea. That's super cool. Now, final thing I want to show you is awesome. End map can do all these things I just showed you. But it also has a scripting engine. You can write custom scripts for an end map that can do a lot of things. Let's go find these scripts. Here's the site. It's called the end map scripting engine. And here's all these scripts you can run. One, that's cool. Are all these scripts under Vulner, which is Vulner abilities. It will actually scan your host. In addition to seeing if they're up and what ports are open, it'll scan to see if they have vulnerabilities that we could exploit. That's what I'm talking about. That's hacking automation right there. Now, we could go in here and run all these scripts individually. But you know what? I'm lazy. I'm not going to do that. Here's what I can do. I'm going to do this. Sudo in map. The switch for scripts is dash dash scripts. And then I can specify my script. But what I'm going to do here instead is just type in Vulner, which should use every one of those scripts in that category. What? Okay, now let's do my host. Now, this will take a bit. So I'm going to do this in coffee break. Oh, sorry. It's script. Now, scripts. Add scripts on the brain. Here we go. And we wait. And it's done. 106 seconds. It's not too bad, actually. Let's see what it did. Now, I have to be honest. There will be a lot of vulnerabilities on this particular box because the server is from VolnHub. But basically, the script went through and analyzed this box for any vulnerabilities using the CVEs, which is common vulnerabilities and exposures. It's a list that's maintained. And it found some, obviously, which is awesome. And we could then go ahead and exploit those because those are known vulnerabilities. Easy enough, right? Oh, and by the way, VolnHub, it's awesome. That box I downloaded is actually called Keopterix. Let me find it real quick. And it has five different versions. It's a VM you can download and it's designed to help you start hacking things. So it's a vulnerable box that you should be able to hack. And there's walkthroughs and all kinds of challenges. But yeah, I picked this because it's going to be vulnerable. And a huge shout out to the guy who created this who I was talking to the other day. He's a founder of the site. He's a hacking genius. Go follow him. I'll put a link below. I'll, by the way, content on these will be coming. They're, they're pretty cool. Now, this was just a quick overview of end map and why it's amazing. If you want to become a hacker, if you want to get your C.E.H. or any other hacking certification, you do need to become more familiar than what I just covered with end map. Here's some of the other switches you might want to learn. Put these on note cards. Practice them. Lab them. Understand what they are. Understand how networking works with these situations. I forgot to cover this right here. Actually, the speeds. You can lower the speed in which it scans things so you can avoid being detected. The default is T3, which is a pretty normal speed scan. As it says, normal speed scan right there. But you can go slower to avoid detection. I tried that. I lost patience and I went faster. But you can't do that. And that was end map. Just one tool used for the scanning and enumeration part of hacking. And if you're going through this C.E.H. This is a vital step. If you check out the EC Council official course, scanning and enumeration are module three and four. So pretty vital. And please don't consider this a deep dive on everything you need to know for scanning and enumeration. I showed you in map and some really fun things we can do with it. If you want to dive deeper, which I encourage you to, in fact, I'm hoping this video makes you dive deeper. Go check out IT Pro TV. I only have like one 16 minute video. And they have a bunch of videos that you can go and dive deeper with. Not to mention they have virtual labs. You can just immediately start playing with stuff. You don't have to set up a lab. It's just there. You play with it. It's awesome. Again, link below or code network chuck for that. You get 30% off forever. So check it out. It's worth it. I'm not a hacker yet. I know that. But I got just a little bit closer today by studying enmap, scanning, and enumeration. I hope that if you watch this video, you got just a little bit closer to becoming a hacker as well. So if you like what I'm doing, if you want to keep watching my journey to see if I actually become a hacker, well subscribe. Hit that like button to help the YouTube algorithm and hit that notification bell so you get notified when I launch stuff. Videos and such. Well, that's pretty much it. That's all I got. Let me know what you thought of the video below in the comments. Let me know if you've used enmap or if you're going to use enmap. I'd love to hear the cool ways you're going to use it. I'll catch you guys next time.