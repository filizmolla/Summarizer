burada baktığınız şey, go programlama dilini programlayan efsanevi programcı Rob Pike burada baktığınız şey, go programlama dilini programlayan efsanevi programcı Rob Pike burada baktığınız şey, go programlama dilini programlayan efsanevi programcı Rob Pike tarafından yazılan programlamanın beş kuralıdır tarafından yazılan programlamanın beş kuralıdır programlamanın ilk kuralı programlamanın ilk kuralı programlamanın ilk kuralı programlama hakkında konuşmamaktır programlamanın ikinci kuralı programlama hakkında konuşmamaktır programlamanın ikinci kuralı programlama hakkında konuşmamaktır programlamanın ikinci kuralı ölçmektir ayarlama yapma ölçmektir ayarlama yapma ölçmektir ayarlama yapma Ölçülene kadar hız yapın ve Ölçülene kadar hız yapın ve Ölçülene kadar hız yapın ve kodun bir kısmı kodun bir kısmı kodun bir kısmı geri kalanına üstün gelmediği sürece ölçüm yapmayın, bu yine bir başka geri kalanına üstün gelmediği sürece ölçüm yapmayın, bu yine bir başka geri kalanına üstün gelmediği sürece ölçüm yapmayın, bu yine bir başka efsanevi programcı Donald Canth'ın efsanevi programcı Donald Canth'ın zamanından önce optimizasyonun zamanından önce optimizasyonun zamanından önce optimizasyonun tüm kötülüklerin kökü olduğunu söylerken benzer tavsiyelerde bulunduğunu hatırlatıyor, hatta babam bile bana tüm kötülüklerin kökü olduğunu söylerken benzer tavsiyelerde bulunduğunu hatırlatıyor, hatta babam bile bana tüm kötülüklerin kökü olduğunu söylerken benzer tavsiyelerde bulunduğunu hatırlatıyor, hatta babam bile bana ölçmemi söylerdi programlamada iki kere kesme ölçmemi söylerdi programlamada iki kere kesme bir kedinin derisini yüzmenin neredeyse Sınırsız sayıda yolu vardır ancak kodunuzu yazma şekliniz bir kedinin derisini yüzmenin neredeyse Sınırsız sayıda yolu vardır ancak kodunuzu yazma şekliniz bir kedinin derisini yüzmenin neredeyse Sınırsız sayıda yolu vardır ancak kodunuzu yazma şekliniz önemlidir, tıpkı JavaScript'te göreceğimiz gibi, önemlidir, tıpkı JavaScript'te göreceğimiz gibi, bir dizi üzerinde döngü yapıp bir dizi üzerinde döngü yapıp bir dizi üzerinde döngü yapıp değerlerini saymanın en az dört farklı yolu vardır ancak bugünkü değerlerini saymanın en az dört farklı yolu vardır ancak bugünkü değerlerini saymanın en az dört farklı yolu vardır ancak bugünkü videoda her tekniğin performansı önemli ölçüde farklılık gösteriyor videoda her tekniğin performansı önemli ölçüde farklılık gösteriyor videoda her tekniğin performansı önemli ölçüde farklılık gösteriyor Size Size Size JavaScript kodunuzu nasıl kolayca kıyaslayacağınızı göstereceğim, böylece JavaScript kodunuzu nasıl kolayca kıyaslayacağınızı göstereceğim, böylece JavaScript kodunuzu nasıl kolayca kıyaslayacağınızı göstereceğim, böylece performansını bilimsel olarak ölçebilir performansını bilimsel olarak ölçebilir performansını bilimsel olarak ölçebilir ve kıyaslamayı son derece kolay hale ve kıyaslamayı son derece kolay hale ve kıyaslamayı son derece kolay hale getirmemize yardımcı olmak için kırmızı ringa balığı optimize ederek zaman kaybetmekten kaçınabilirsiniz. getirmemize yardımcı olmak için kırmızı ringa balığı optimize ederek zaman kaybetmekten kaçınabilirsiniz. JavaScript kullanacağız JavaScript kullanacağız JavaScript kullanacağız Yerleşik bir kıyaslama aracına sahip olan runtime Dino Yerleşik bir kıyaslama aracına sahip olan runtime Dino Yerleşik bir kıyaslama aracına sahip olan runtime Dino ile birkaç gün uğraştıktan sonra ile birkaç gün uğraştıktan sonra ile birkaç gün uğraştıktan sonra bazı şaşırtıcı şeyler elde etmeyi başardım, bazı şaşırtıcı şeyler elde etmeyi başardım, bazı şaşırtıcı şeyler elde etmeyi başardım, örneğin dizi örneğin dizi örneğin dizi içeriklerini 100.000 kat daha hızlı hale getirmeyi buldum. içeriklerini 100.000 kat daha hızlı hale getirmeyi buldum. JavaScript'te yerleşik dizi sıralama yöntemi ve JavaScript'te yerleşik dizi sıralama yöntemi ve JavaScript'te yerleşik dizi sıralama yöntemi ve döngü yazmanın en hızlı yolunu buldum, önce döngü yazmanın en hızlı yolunu buldum, önce döngü yazmanın en hızlı yolunu buldum, önce Doo bench'in nasıl çalıştığına bir göz atalım, Doo bench'in nasıl çalıştığına bir göz atalım, Doo bench'in nasıl çalıştığına bir göz atalım, ilk önce Doo 2'nin kurulu olduğundan emin olmak isteyeceksiniz ilk önce Doo 2'nin kurulu olduğundan emin olmak isteyeceksiniz ilk önce Doo 2'nin kurulu olduğundan emin olmak isteyeceksiniz ve ayrıca şunu da belirtmek isterim ve ayrıca şunu da belirtmek isterim ve ayrıca şunu da belirtmek isterim ki Bu video, ki Bu video, ki Bu video, şu anda resmi olarak üretim aşamasında olan şu anda resmi olarak üretim aşamasında olan şu anda resmi olarak üretim aşamasında olan ve 7 Kasım civarında çıkması beklenen, ve 7 Kasım civarında çıkması beklenen, ve 7 Kasım civarında çıkması beklenen, yaklaşık 25 yaklaşık 25 yaklaşık 25 video ve birden fazla projeyi içerecek olan tam Dino kursumun bir parçasıdır; video ve birden fazla projeyi içerecek olan tam Dino kursumun bir parçasıdır; video ve birden fazla projeyi içerecek olan tam Dino kursumun bir parçasıdır; belirtmek istediğim diğer şey, yalnızca belirtmek istediğim diğer şey, yalnızca belirtmek istediğim diğer şey, yalnızca JavaScript'i ve performansını ölçüyor olmamızdır. JavaScript'i ve performansını ölçüyor olmamızdır. JavaScript'i ve performansını ölçüyor olmamızdır. kaputun altındaki kaputun altındaki tüm krom tarayıcılara da güç veren V8 motor tarafından çalıştırılan doo çalışma zamanında ve tüm krom tarayıcılara da güç veren V8 motor tarafından çalıştırılan doo çalışma zamanında ve tüm krom tarayıcılara da güç veren V8 motor tarafından çalıştırılan doo çalışma zamanında ve hayır. Ancak, hayır. Ancak, Dino ve Bun düğümü gibi farklı çalışma süreleri arasındaki performansı karşılaştırmak istiyorsanız, Dino ve Bun düğümü gibi farklı çalışma süreleri arasındaki performansı karşılaştırmak istiyorsanız, Dino ve Bun düğümü gibi farklı çalışma süreleri arasındaki performansı karşılaştırmak istiyorsanız, Anton Anton Anton Putra'nın üçünü de Putra'nın üçünü de Putra'nın üçünü de büyük ölçekli bir Bulut ortamında test eden bu videosunu şiddetle tavsiye ederim. büyük ölçekli bir Bulut ortamında test eden bu videosunu şiddetle tavsiye ederim. JavaScript'te bir dizi üzerinde Döngü yapmanın en hızlı yolu nedir sorusuna kod yazın ve cevap verin JavaScript'te bir dizi üzerinde Döngü yapmanın en hızlı yolu nedir sorusuna kod yazın ve cevap verin Bunu yapmanın en az dört farklı yolunu biliyorum, bunları Bunu yapmanın en az dört farklı yolunu biliyorum, bunları Bunu yapmanın en az dört farklı yolunu biliyorum, bunları bu dört fonksiyonda temsil ettim; bu dört fonksiyonda temsil ettim; bu dört fonksiyonda temsil ettim; burada amaç bir dizi üzerinde Döngü yapmak burada amaç bir dizi üzerinde Döngü yapmak burada amaç bir dizi üzerinde Döngü yapmak ve sonra toplamaktır ilk önce bu dizideki sayıları yukarı çıkaralım, ve sonra toplamaktır ilk önce bu dizideki sayıları yukarı çıkaralım, her yöntem için bir dizimiz var, eğer bir diziniz varsa, her yöntem için bir dizimiz var, eğer bir diziniz varsa, her yöntem için bir dizimiz var, eğer bir diziniz varsa, her biri için bir seçenek kullanmaktır, ona çalışan her biri için bir seçenek kullanmaktır, ona çalışan her biri için bir seçenek kullanmaktır, ona çalışan bir değişkeni değiştiren bir geri çağırma işlevi sağlayın, bir değişkeni değiştiren bir geri çağırma işlevi sağlayın, bir değişkeni değiştiren bir geri çağırma işlevi sağlayın, ancak ancak ancak bunu yapmanın daha temiz bir yolu var bunu yapmanın daha temiz bir yolu var bunu yapmanın daha temiz bir yolu var aynı zamanda bir geri çağırma işlevi alan ancak aynı zamanda bir geri çağırma işlevi alan ancak aynı zamanda bir geri çağırma işlevi alan ancak aynı zamanda birikmiş bir değere sahip olan dizi azaltma ile aynı zamanda birikmiş bir değere sahip olan dizi azaltma ile aynı zamanda birikmiş bir değere sahip olan dizi azaltma ile bu değişkeni değiştirmeye gerek yoktur, bu değişkeni değiştirmeye gerek yoktur, bunun gibi işlevsel bildirimsel kodu reactjs gibi ön uç projelerde çok göreceksiniz, bunun gibi işlevsel bildirimsel kodu reactjs gibi ön uç projelerde çok göreceksiniz, bunun gibi işlevsel bildirimsel kodu reactjs gibi ön uç projelerde çok göreceksiniz, ancak bir sonraki seçenek ancak bir sonraki seçenek ancak bir sonraki seçenek artırmaktır. JavaScript'te normal bir dört Döngü kullanarak toplam, artırmaktır. JavaScript'te normal bir dört Döngü kullanarak toplam, dizinin sonuna kadar otomatik olarak yinelenecek bir dörtlü Döngü oluşturabilirsiniz, bu dizinin sonuna kadar otomatik olarak yinelenecek bir dörtlü Döngü oluşturabilirsiniz, bu dizinin sonuna kadar otomatik olarak yinelenecek bir dörtlü Döngü oluşturabilirsiniz, bu güzel ve okunabilirdir ancak güzel ve okunabilirdir ancak güzel ve okunabilirdir ancak for Döngüsü yazmanın geleneksel yolu, for Döngüsü yazmanın geleneksel yolu, for Döngüsü yazmanın geleneksel yolu, bir değişkenin olduğu bu daha açık sözdizimini kullanmaktır bir değişkenin olduğu bu daha açık sözdizimini kullanmaktır Dizinin uzunluğu üzerinde Döngü yaptıkça artan I değeri, Dizinin uzunluğu üzerinde Döngü yaptıkça artan I değeri, Dizinin uzunluğu üzerinde Döngü yaptıkça artan I değeri, aynı sorunu çözmemiz için bize dört yol sunar, aynı sorunu çözmemiz için bize dört yol sunar, aynı sorunu çözmemiz için bize dört yol sunar, ancak asıl soru ancak asıl soru ancak asıl soru hangisinin en iyi performansı göstereceğidir. hangisinin en iyi performansı göstereceğidir. hangisinin en iyi performansı göstereceğidir. Yapacağımız ilk şey, Yapacağımız ilk şey, Yapacağımız ilk şey, bu durumda olduğu gibi bazı test verileri oluşturmaktır. bu durumda olduğu gibi bazı test verileri oluşturmaktır. bu durumda olduğu gibi bazı test verileri oluşturmaktır. içinde 100.000 öğe bulunan geniş bir dizi oluşturun ve içinde 100.000 öğe bulunan geniş bir dizi oluşturun ve içinde 100.000 öğe bulunan geniş bir dizi oluşturun ve şimdi nihayet şimdi nihayet şimdi nihayet küresel Dino ad alanında Doo bench devreye giriyor, küresel Dino ad alanında Doo bench devreye giriyor, küresel Dino ad alanında Doo bench devreye giriyor, bench yöntemini çağırabilir ve ardından ona bench yöntemini çağırabilir ve ardından ona Benchmark için normal bir işlev sağlayabilir veya ona Benchmark için normal bir işlev sağlayabilir veya ona Benchmark için normal bir işlev sağlayabilir veya ona bir nesne sağlayabilirsiniz. Her Karşılaştırmaya bir nesne sağlayabilirsiniz. Her Karşılaştırmaya bir nesne sağlayabilirsiniz. Her Karşılaştırmaya bir ad verin ve ardından FN özelliği, çalıştırmak ve ölçmek istediğiniz bir ad verin ve ardından FN özelliği, çalıştırmak ve ölçmek istediğiniz bir ad verin ve ardından FN özelliği, çalıştırmak ve ölçmek istediğiniz gerçek kod olan bir işlevi alacaktır. gerçek kod olan bir işlevi alacaktır. gerçek kod olan bir işlevi alacaktır. Bu Bu Bu dosyada doench'i, dosyada doench'i, dosyada doench'i, işlevlerimizin her biri için bir kıyaslama oluşturmak için kullanacağız, işlevlerimizin her biri için bir kıyaslama oluşturmak için kullanacağız, işlevlerimizin her biri için bir kıyaslama oluşturmak için kullanacağız, ayrıca ayarlamaya da yardımcı olur. ayrıca ayarlamaya da yardımcı olur. ayrıca ayarlamaya da yardımcı olur. Tipik olarak orijinal kodunuz olacak bir temel oluşturacağım Tipik olarak orijinal kodunuz olacak bir temel oluşturacağım Tipik olarak orijinal kodunuz olacak bir temel oluşturacağım ve bu durumda bunu ve bu durumda bunu ve bu durumda bunu Doo'daki Loop için geleneksel olarak belirleyeceğim, bu Doo'daki Loop için geleneksel olarak belirleyeceğim, bu Doo'daki Loop için geleneksel olarak belirleyeceğim, bu kıyaslamalar aslında kıyaslamalar aslında kıyaslamalar aslında çalışma zamanı kodunuzu etkilemiyor ancak daha çok çalışma zamanı kodunuzu etkilemiyor ancak daha çok çalışma zamanı kodunuzu etkilemiyor ancak daha çok test kodu ve yürütme yöntemi gibi davranıyorlar test kodu ve yürütme yöntemi gibi davranıyorlar test kodu ve yürütme yöntemi gibi davranıyorlar Kriterler terminali açmak Kriterler terminali açmak Kriterler terminali açmak ve doench komutunu çalıştırmak ve ardından ve doench komutunu çalıştırmak ve ardından ve doench komutunu çalıştırmak ve ardından dosya adını çalıştırmaktır, çalıştırılması birkaç saniye sürecektir, dosya adını çalıştırmaktır, çalıştırılması birkaç saniye sürecektir, dosya adını çalıştırmaktır, çalıştırılması birkaç saniye sürecektir, ancak bize ancak bize ancak bize işlevin saniyede kaç yinelemeyi işlevin saniyede kaç yinelemeyi işlevin saniyede kaç yinelemeyi çalıştırabildiğini çalıştırabildiğini çalıştırabildiğini ve değerini gösteren bu raporu verir. ortalama yürütme süresi ve ve değerini gösteren bu raporu verir. ortalama yürütme süresi ve ve değerini gösteren bu raporu verir. ortalama yürütme süresi ve aynı zamanda en iyi durum ve en kötü durum aynı zamanda en iyi durum ve en kötü durum aynı zamanda en iyi durum ve en kötü durum performansı, ancak yüksek düzeyde en performansı, ancak yüksek düzeyde en performansı, ancak yüksek düzeyde en yararlı şey yararlı şey yararlı şey bize hangi işlevin en hızlı olduğunu gösteren özettir ve bize hangi işlevin en hızlı olduğunu gösteren özettir ve bize hangi işlevin en hızlı olduğunu gösteren özettir ve şaşırtıcı bir şekilde geleneksel for Döngüsü şaşırtıcı bir şekilde geleneksel for Döngüsü şaşırtıcı bir şekilde geleneksel for Döngüsü diğerlerinden önemli ölçüde daha hızlıdır ve diğerlerinden önemli ölçüde daha hızlıdır ve diğerlerinden önemli ölçüde daha hızlıdır ve merak ediyor olabilirsiniz neden bu kadar iyi, merak ediyor olabilirsiniz neden bu kadar iyi, merak ediyor olabilirsiniz neden bu kadar iyi, asıl neden asıl neden asıl neden soyutlama veya işlev çağrısının olmamasıdır soyutlama veya işlev çağrısının olmamasıdır soyutlama veya işlev çağrısının olmamasıdır Dörtlü döngü gibi ek yük, Dörtlü döngü gibi ek yük, Dörtlü döngü gibi ek yük, sözdizimsel şekeri sözdizimsel şekeri sözdizimsel şekeri ve her biri için diziyi elde etmek için yineleyici protokolünü kullanır ve geleneksel for'un ve her biri için diziyi elde etmek için yineleyici protokolünü kullanır ve geleneksel for'un ve her biri için diziyi elde etmek için yineleyici protokolünü kullanır ve geleneksel for'un her yinelemeden sonra bir işlev çağrısı gerektirmesini azaltır. her yinelemeden sonra bir işlev çağrısı gerektirmesini azaltır. her yinelemeden sonra bir işlev çağrısı gerektirmesini azaltır. Döngü yoktur ancak Döngü yoktur ancak Döngü yoktur ancak girdi verileri önemlidir, örneğin girdi verileri önemlidir, örneğin girdi verileri önemlidir, örneğin dizideki öğelerin sayısını dizideki öğelerin sayısını dizideki öğelerin sayısını bir milyona çıkarırsak, bir milyona çıkarırsak, bir milyona çıkarırsak, geleneksel for Döngüsünün faydalarının geleneksel for Döngüsünün faydalarının geleneksel for Döngüsünün faydalarının önemli ölçüde arttığını görebilirsiniz ve şimdi önemli ölçüde arttığını görebilirsiniz ve şimdi önemli ölçüde arttığını görebilirsiniz ve şimdi 5 kat veya daha fazla performans artışı elde ediyoruz 5 kat veya daha fazla performans artışı elde ediyoruz 5 kat veya daha fazla performans artışı elde ediyoruz ancak işin tuhaf kısmı şu ki, ancak işin tuhaf kısmı şu ki, ancak işin tuhaf kısmı şu ki, dizinin uzunluğunu yaklaşık 100'e indirirsek dizinin uzunluğunu yaklaşık 100'e indirirsek dizinin uzunluğunu yaklaşık 100'e indirirsek performans neredeyse eşit hale gelir ve performans neredeyse eşit hale gelir ve performans neredeyse eşit hale gelir ve aslında dizi azaltma aslında dizi azaltma aslında dizi azaltma geleneksel for Döngüsünü geride bırakır, bu nedenle geleneksel for Döngüsünü geride bırakır, bu nedenle geleneksel for Döngüsünü geride bırakır, bu nedenle buradaki ana yol, buradaki ana yol, buradaki ana yol, kullandığınız döngü türünün gerçekten önemli olmadığıdır. kullandığınız döngü türünün gerçekten önemli olmadığıdır. kullandığınız döngü türünün gerçekten önemli olmadığıdır. çok büyük diziler üzerinde döngü yapmıyorsanız, çok büyük diziler üzerinde döngü yapmıyorsanız, çok büyük diziler üzerinde döngü yapmıyorsanız, bu durumda bu durumda bu durumda oldukça ilginç bir geleneksel for Döngüsü kullanmak isteyeceksiniz, oldukça ilginç bir geleneksel for Döngüsü kullanmak isteyeceksiniz, oldukça ilginç bir geleneksel for Döngüsü kullanmak isteyeceksiniz, ancak şimdi size ancak şimdi size bir dizide bir değer ararken performans üzerinde büyük bir etkiye sahip olabilecek bir optimizasyon göstermek istiyorum. bu fonksiyonla bir dizide bir değer ararken performans üzerinde büyük bir etkiye sahip olabilecek bir optimizasyon göstermek istiyorum. bu fonksiyonla ürün kimlikleri, kullanıcı kimlikleri ve e-postaları içeren çok büyük bir dizi oluşturan bazı test verileri oluşturuyorum ancak daha sonra ürün kimlikleri, kullanıcı kimlikleri ve e-postaları içeren çok büyük bir dizi oluşturan bazı test verileri oluşturuyorum ancak daha sonra vanilyadaki büyük dizide bulup bulamayacağımızı görmek istediğimiz bazı eşleşen değerleri içeren 1000 değerden oluşan başka bir dizi oluşturdum vanilyadaki büyük dizide bulup bulamayacağımızı görmek istediğimiz bazı eşleşen değerleri içeren 1000 değerden oluşan başka bir dizi oluşturdum vanilyadaki büyük dizide bulup bulamayacağımızı görmek istediğimiz bazı eşleşen değerleri içeren 1000 değerden oluşan başka bir dizi oluşturdum JavaScript'te bunu yapmanın tipik yolu, JavaScript'te bunu yapmanın tipik yolu, eşleşen bir değer bulana kadar dizi üzerinde döngü yapacak ve ardından eşleşen bir değer bulana kadar dizi üzerinde döngü yapacak ve ardından eşleşen bir değer bulana kadar dizi üzerinde döngü yapacak ve ardından Büyük O'da bize n performansından o'yu verecek doğru veya yanlış bir Boolean döndürecek bir işlev olan dizi içerme işlevini kullanmaktır, Büyük O'da bize n performansından o'yu verecek doğru veya yanlış bir Boolean döndürecek bir işlev olan dizi içerme işlevini kullanmaktır, ancak var ancak var ancak var Bu sorunu çözmenin alternatif ve daha akıllı bir yolu, Bu sorunu çözmenin alternatif ve daha akıllı bir yolu, Bu sorunu çözmenin alternatif ve daha akıllı bir yolu, orijinal diziyi alıp bir küme orijinal diziyi alıp bir küme orijinal diziyi alıp bir küme veri yapısı oluşturabiliriz; bir küme, veri yapısı oluşturabiliriz; bir küme, veri yapısı oluşturabiliriz; bir küme, her şeyi benzersiz değere göre indeksler ve has adı verilen ve her şeyi benzersiz değere göre indeksler ve has adı verilen ve bu değerin kümede var olup olmadığını bize söyleyecek olan bir yönteme sahiptir oldukça bu değerin kümede var olup olmadığını bize söyleyecek olan bir yönteme sahiptir oldukça bu değerin kümede var olup olmadığını bize söyleyecek olan bir yönteme sahiptir oldukça basittir, ancak şimdi basittir, ancak şimdi basittir, ancak şimdi bu kez Karşılaştırmamızı çalıştıralım, performans farkı bu kez Karşılaştırmamızı çalıştıralım, performans farkı bu kez Karşılaştırmamızı çalıştıralım, performans farkı şaşırtıcı: dizi içeriği şaşırtıcı: dizi içeriği şaşırtıcı: dizi içeriği sorunu saniyede yalnızca 4,9 kez çözerken, sorunu saniyede yalnızca 4,9 kez çözerken, sorunu saniyede yalnızca 4,9 kez çözerken, set arama set arama set arama aynı şeyi saniyede 4,5 milyon kez aynı şeyi saniyede 4,5 milyon kez aynı şeyi saniyede 4,5 milyon kez , başka bir deyişle bir milyon kat , başka bir deyişle bir milyon kat , başka bir deyişle bir milyon kat daha hızlı çözebildi. bu çok dramatik daha hızlı çözebildi. bu çok dramatik daha hızlı çözebildi. bu çok dramatik çünkü set tek bir performansa sahip, çünkü set tek bir performansa sahip, çünkü set tek bir performansa sahip, benzersiz değerler zaten indekslenmiş, bu nedenle benzersiz değerler zaten indekslenmiş, bu nedenle benzersiz değerler zaten indekslenmiş, bu nedenle tüm dizi üzerinde döngü yapmasına gerek yok, tüm dizi üzerinde döngü yapmasına gerek yok, eğer sadece dizi kullanıyorsanız, şimdi ilişkisel bir veritabanında indeks oluşturmakla aynı temel kavramdır eğer sadece dizi kullanıyorsanız, şimdi ilişkisel bir veritabanında indeks oluşturmakla aynı temel kavramdır eğer sadece dizi kullanıyorsanız, şimdi ilişkisel bir veritabanında indeks oluşturmakla aynı temel kavramdır az sayıda öğe içeriyorsa, az sayıda öğe içeriyorsa, az sayıda öğe içeriyorsa, muhtemelen bir küme oluşturmaya değmez muhtemelen bir küme oluşturmaya değmez muhtemelen bir küme oluşturmaya değmez çünkü bu dizini oluşturmanın bazı ek yükleri vardır, çünkü bu dizini oluşturmanın bazı ek yükleri vardır, çünkü bu dizini oluşturmanın bazı ek yükleri vardır, ancak ancak ancak büyük bir veri kümeniz varsa kesinlikle buna değer, büyük bir veri kümeniz varsa kesinlikle buna değer, büyük bir veri kümeniz varsa kesinlikle buna değer, ancak şimdi dizileri sıralama hakkında konuşalım, bunu ancak şimdi dizileri sıralama hakkında konuşalım, bunu ancak şimdi dizileri sıralama hakkında konuşalım, bunu yapmanın birçok yolu var bu ve yapmanın birçok yolu var bu ve yapmanın birçok yolu var bu ve 10 farklı sıralama algoritmasını görsel olarak karşılaştıran bir videom bile var, 10 farklı sıralama algoritmasını görsel olarak karşılaştıran bir videom bile var, ancak JavaScript'in ayrıca yerleşik bir dizi ancak JavaScript'in ayrıca yerleşik bir dizi ancak JavaScript'in ayrıca yerleşik bir dizi sıralama yöntemi var ve sıralama yöntemi var ve kabarcık kabarcık kabarcık sıralama, hızlı sıralama ve birleştirme sıralama gibi üç farklı sıralama algoritması uygulayarak bunu yenebilir miyim diye merak ediyordum. sıralama, hızlı sıralama ve birleştirme sıralama gibi üç farklı sıralama algoritması uygulayarak bunu yenebilir miyim diye merak ediyordum. sıralama, hızlı sıralama ve birleştirme sıralama gibi üç farklı sıralama algoritması uygulayarak bunu yenebilir miyim diye merak ediyordum. Uygulamayı ayrıntılı olarak ele almayacağım Uygulamayı ayrıntılı olarak ele almayacağım Uygulamayı ayrıntılı olarak ele almayacağım ancak kabarcık sıralama genellikle ancak kabarcık sıralama genellikle ancak kabarcık sıralama genellikle en basit algoritma olarak kabul edilir ancak en basit algoritma olarak kabul edilir ancak en basit algoritma olarak kabul edilir ancak çok performanslı değildir; hızlı sıralama ise çoğu kullanım durumu için performanslı değildir; hızlı sıralama ise çoğu kullanım durumu için performanslı değildir; hızlı sıralama ise çoğu kullanım durumu için genellikle genellikle genellikle en hızlı sıralama algoritması olarak kabul edilen bir böl ve yönet algoritmasıdır en hızlı sıralama algoritması olarak kabul edilen bir böl ve yönet algoritmasıdır ve sonra, bu Karşılaştırmada belirli veri yapılarında gerçekten iyi performans gösterebilen, aynı zamanda ve sonra, bu Karşılaştırmada belirli veri yapılarında gerçekten iyi performans gösterebilen, aynı zamanda ve sonra, bu Karşılaştırmada belirli veri yapılarında gerçekten iyi performans gösterebilen, aynı zamanda bir böl ve yönet algoritması olan birleştirme sıralamasını kullanın. bir böl ve yönet algoritması olan birleştirme sıralamasını kullanın. 10.000 öğeden oluşan bir diziyi sıralayacağım, 10.000 öğeden oluşan bir diziyi sıralayacağım, Temel olarak JavaScript sıralama işlevini kullanacağız ve çalıştırdığımızda Bu Temel olarak JavaScript sıralama işlevini kullanacağız ve çalıştırdığımızda Bu Temel olarak JavaScript sıralama işlevini kullanacağız ve çalıştırdığımızda Bu Karşılaştırma sonucunda oldukça ilginç sonuçlar elde ediyoruz Karşılaştırma sonucunda oldukça ilginç sonuçlar elde ediyoruz Karşılaştırma sonucunda oldukça ilginç sonuçlar elde ediyoruz kabarcık sıralama açıkça berbattır büyük kabarcık sıralama açıkça berbattır büyük kabarcık sıralama açıkça berbattır büyük zamanlı birleştirme sıralaması oldukça benzer bir zamanlı birleştirme sıralaması oldukça benzer bir zamanlı birleştirme sıralaması oldukça benzer bir performansa sahiptir ancak hızlı sıralama neredeyse performansa sahiptir ancak hızlı sıralama neredeyse performansa sahiptir ancak hızlı sıralama neredeyse üç kat daha hızlıdır bu oldukça üç kat daha hızlıdır bu oldukça üç kat daha hızlıdır bu oldukça etkileyicidir ama bunun neden bu kısmı etkileyicidir ama bunun neden bu kısmı işlev çağrıları ve sıralamanın yüküyle ilgilidir? ama aynı zamanda işlev çağrıları ve sıralamanın yüküyle ilgilidir? ama aynı zamanda aslında sıralama yaptığınız şeye de bağlıdır, bu durumda aslında sıralama yaptığınız şeye de bağlıdır, bu durumda aslında sıralama yaptığınız şeye de bağlıdır, bu durumda hızlı sıralama sayılarla gerçekten iyi bir hızlı sıralama sayılarla gerçekten iyi bir hızlı sıralama sayılarla gerçekten iyi bir iş yapabilir, ancak iş yapabilir, ancak iş yapabilir, ancak gerçek test gerçek test gerçek test verilerini bir dizi diziyle değiştirirsek ne olacağını görelim. verilerini bir dizi diziyle değiştirirsek ne olacağını görelim. verilerini bir dizi diziyle değiştirirsek ne olacağını görelim. aynı Karşılaştırma, ancak dizelerle aynı Karşılaştırma, ancak dizelerle aynı Karşılaştırma, ancak dizelerle hızlı sıralama hala daha hızlıdır ancak sadece hızlı sıralama hala daha hızlıdır ancak sadece hızlı sıralama hala daha hızlıdır ancak sadece birazcık sonuç olarak, birazcık sonuç olarak, birazcık sonuç olarak, JavaScript'te sıralama JavaScript'te sıralama JavaScript'te sıralama çoğu kullanım durumu için muhtemelen yeterince hızlıdır ve programlamanın dördüncü kuralı, çoğu kullanım durumu için muhtemelen yeterince hızlıdır ve programlamanın dördüncü kuralı, çoğu kullanım durumu için muhtemelen yeterince hızlıdır ve programlamanın dördüncü kuralı, süslü algoritmaların süslü algoritmaların süslü algoritmaların basit algoritmalardan daha hatalı olmasıdır ve onlar' basit algoritmalardan daha hatalı olmasıdır ve onlar' basit algoritmalardan daha hatalı olmasıdır ve onlar' Basit Basit Basit algoritmaların yanı sıra basit veri algoritmaların yanı sıra basit veri algoritmaların yanı sıra basit veri yapılarını uygulamak çok daha zordur, ancak gerçekten yapılarını uygulamak çok daha zordur, ancak gerçekten yapılarını uygulamak çok daha zordur, ancak gerçekten bir sıralama algoritmasını optimize etmek istiyorsanız bir sıralama algoritmasını optimize etmek istiyorsanız bir sıralama algoritmasını optimize etmek istiyorsanız muhtemelen muhtemelen muhtemelen JavaScript ile uğraşmamalı ve bunun yerine JavaScript ile uğraşmamalı ve bunun yerine JavaScript ile uğraşmamalı ve bunun yerine C veya pas gibi bir sistem dili kullanmalısınız. Doo'nun C veya pas gibi bir sistem dili kullanmalısınız. Doo'nun C veya pas gibi bir sistem dili kullanmalısınız. Doo'nun kendisi aslında Rust'ta yazılmış, kendisi aslında Rust'ta yazılmış, kendisi aslında Rust'ta yazılmış, JavaScript çalışma zamanı JavaScript çalışma zamanı JavaScript çalışma zamanı Zig, nodejs ve C++ ile yazılmış oldukça Zig, nodejs ve C++ ile yazılmış oldukça Zig, nodejs ve C++ ile yazılmış oldukça ilginç ama bence tüm bu kıyaslamalardan öğrendiğim en önemli şey, ilginç ama bence tüm bu kıyaslamalardan öğrendiğim en önemli şey, neredeyse tüm yerleşik şeylerin neredeyse tüm yerleşik şeylerin neredeyse tüm yerleşik şeylerin yeterince iyi olduğu, kıyaslamanın eğlenceli olduğu ama yeterince iyi olduğu, kıyaslamanın eğlenceli olduğu ama yeterince iyi olduğu, kıyaslamanın eğlenceli olduğu ama çok daha önemli olduğu. önce kodunuzun çalışmasını sağlamak için çok daha önemli olduğu. önce kodunuzun çalışmasını sağlamak için çok daha önemli olduğu. önce kodunuzun çalışmasını sağlamak için ve bu da bizi ve bu da bizi ve bu da bizi programlamanın ilk kuralına geri getirir, programlamanın ilk kuralına geri getirir, programlamanın ilk kuralına geri getirir, bir programın zamanını nerede harcayacağını söyleyemezsiniz, bir programın zamanını nerede harcayacağını söyleyemezsiniz, bir programın zamanını nerede harcayacağını söyleyemezsiniz, darboğazlar şaşırtıcı yerlerde meydana gelir, darboğazlar şaşırtıcı yerlerde meydana gelir, darboğazlar şaşırtıcı yerlerde meydana gelir, bu nedenle ikinci bu nedenle ikinci bu nedenle ikinci bir tahminde bulunup hız kesmeye çalışmayın bir tahminde bulunup hız kesmeye çalışmayın bir tahminde bulunup hız kesmeye çalışmayın Darboğazın nerede olduğunu kanıtlayana kadar ve Darboğazın nerede olduğunu kanıtlayana kadar ve Darboğazın nerede olduğunu kanıtlayana kadar ve bunu bunu bunu Dino bench gibi araçlarla ölçerek kanıtlamanın yolu, gelecek hafta Dino bench gibi araçlarla ölçerek kanıtlamanın yolu, gelecek hafta Dino bench gibi araçlarla ölçerek kanıtlamanın yolu, gelecek hafta çıktığında Dino kursunun tamamına göz atmayı unutmayın; çıktığında Dino kursunun tamamına göz atmayı unutmayın; çıktığında Dino kursunun tamamına göz atmayı unutmayın; burada burada burada sonuna kadar gidebilmeniz için bir indirim kodu var Bu videoyu sonuna kadar gidebilmeniz için bir indirim kodu var Bu videoyu sonuna kadar gidebilmeniz için bir indirim kodu var Bu videoyu izlediğiniz için teşekkürler ve izlediğiniz için teşekkürler ve izlediğiniz için teşekkürler ve bir sonraki videoda görüşürüz