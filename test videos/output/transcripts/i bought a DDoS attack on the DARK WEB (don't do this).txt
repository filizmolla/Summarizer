 So I bought a DDoS attack on the Dark Web. I got on my VPN client, launched my Tor browser, and I got on the Dark Web. I found the Dark Web marketplace, I signed up for it, and I found a DDoS attack I could purchase. What is that? It's a distributed denial of service attack. It's not like regular hacking or I'm trying to gain access to your system, still your information make money off you. No, I want to bring you down. I don't want to hack into your website. I want your website to disappear and be inaccessible to everyone. Dot disclaimer, this is for educational purposes only. Never do this to anyone without their permission. Ever. But I will show you in this video how to use that denial of service attack. I'll even give you access to it. As long as you promise to only use it on people you have permission to use it on. Like yourself or your friends. Use it on your friends. I'll be fun. Did I mention I also built a botnet which is kind of crazy if you don't know what that is, you'll find out. Anyways. Let's get into it. And also a huge shout out to IT Pro TV. They are the official sponsor of this series. I actually use their stuff to prepare for this video and learn about denial of service. And all the attacks we can use. So if you want to go deeper into hacking or anything else in IT, check it out. You've got a link below. You'll get 30% off. Forever. So check it out. Now the stuff I bought is crazy. Like let me show you real quick. Here's one of these. It's a tool called Sapphira and this thing is scary. It's a python script. And it's sophisticated. Like, watch as I scroll through this thing. I mean, a lot of code, a lot of cool things going on. And I'll show you how to use this. I even built a botany, which is an army of servers that will attack using this code all at the same time. That's actually called a distributed denial of service attacker, DDoS. But do you know what the scariest part about a DOS attack is? It's crazy easy to do an attack like this. Like anyone can do it. And you can cause some serious damage. And honestly, you don't even need scary dark web scripts like I have. You don't have to go there. In fact, you shouldn't. Don't do not go on the dark web. Now one of the tools you can download and use right now is the low orbit ion cannon. And this thing's crazy easy to use. Check this out. So I've got my web server here works fine. I'm actually pinging it from another server as well. So we can see how healthy it is. And we know it's healthy when we look at the time it takes to get there. I'm sending a ping. He's responding back. And that's how long it takes. Sub millisecond. It's on a local land. It's perfect. But if we use the ion cannon, check this out. Again, you can do this easily. Windows, Mac, Linux. You can get this free tool and mess with your family and friends. So I put in my IP, 10.7.1.50. That's my web server here. I'm going to lock in my targets ready. Or I'm ready. He's not ready. My method will be UDP. So I'm about to DOS attack myself. Now please, again, don't attack anyone without permission. You can go to jail for this. People have gone to jail for this. So be careful. Anyways, I'm a charge of my laser go. It's flooding. It's going. It's blah. Like look at this. Look at all the traffic I'm sending right now. And notice over here, we are affecting the server. It's gone from sub millisecond response time to almost two milliseconds. Two, three. Look at that. I know for some of you that's like, well, Chuck, that was kind of underwhelming. Why isn't it taking down the server? Why isn't the can and just blasting away? I'll talk about that here in a second. But just know that when we're DOSing something or denial of servicing something, we basically have two goals. We want to overwhelm or confuse or both. We want to overwhelm that server with a bunch of stuff. That's what we're doing here. We're sending a bunch of internet traffic to just confuse the heck out of that server in overwhelm him. But we still couldn't take it down. Why? Let me show you. Denial service started out with just pinging a server. Just like this. And by the way, this is harmless. This is what actually we use to see if servers are up. We say, hey, are you up and they respond? Yes, we are. And that's beautiful. We use that all the time. But hackers want to take a good thing and make it a bad thing. So they think, okay, what if I'm not sending a ping every second? What if I increase that frequency? Maybe if I send a bunch of stuff really fast, I can overwhelm that server. So something like this, I can use a popular hacking tool called HPing3. What you can install most Linux distributions, just APT install HPing3. But here we go. So what we use is dash 1 for a ping ICMP protocol. I'll do a dash dash flood, which basically means we're going to send as many pings as we possibly can as fast as we can. We're just going to overload the server. And then my target, 10.7.1.50. And let's go. So now it's sending a ton of traffic right now. And but what we'll notice too is that if I look back at my ping and my server the time really hasn't changed much. Honestly, it really hasn't changed at all. But why? Well, the simple answer is that it's just not enough traffic to overwhelm my server. It's got plenty of bandwidth and you can handle all those ping requests. So something like that, an attack like that really is an effective now. But what if we did this? What if instead of one computer I'm using to attack it, what if I use another? What if I start sending pings from there? And from here. And from here, what if I keep adding them? Let's try that. Let's see if it affects it. I'm doing it from one server, another server, another server. And that should be enough. Let's see if anything happened. Okay, we're actually seeing something happen now. This is significant. Watch this. We've gone from sub millisecond to times 19 milliseconds, which is huge on a local LAN. So now we have all this traffic going to the server. He's handling all these pings, which is stressful for him. And we're using up the bandwidth. This is what we call a distributed denial of service attack or a DDoS attack because we're using multiple computers to attack our target because you know what? One computer, one Nick, one processor in memory isn't quite enough to attack and just confuse an overwhelming server. We need multiple. Now again, this is not hard to do. You get a few servers spun up, you run HPing three and you can overwhelm with a device. Now, this attack is called a ping flood or a ICMP flood. And again, it just takes advantage of a protocol and a tool that we all use, all IT people use to make sure things are up, but we use them to take it down, which is kind of cool. Now, the problem with this attack is that it's pretty easy to defeat. All you got to do is turn off ICMP on your server, turn off ping, turn it off to where your server does not respond to pings and can't attack him anymore. It's done. How lame. I see a PCMP flood. There's even an attack called a ping of death, which sounds awesome, but it doesn't work anymore. The ping of death was cool because you could send a super heavy large packet to your victim so large they couldn't handle it and it caused them just to feel overwhelmed, a buffer overflows. It doesn't work anymore. So if these don't work anymore, then what do we do now? Well, we get smarter. We make our attacks more complex. We find something else. And that's what happened. Let me shove all my attacks down. And this is exactly why I want to show you these DDoS scripts I downloaded from the Dark Web. They have become more complex and they are insane and crazy, but we're going to build up to that. So let's keep going. So getting back into the mind of a hacker hackers, they just try to find ways to make good things into bad things. One of those things is the TCP protocol, which is how we connect to our websites. When I want to access a website on the server, I connect the TCP port 80 or 443 and to establish that connection, we have a thing called the three way handshake. This happens every single time. So basically, you know, let's say me over here in my beard and my coffee, when I connect to that website, I'm going to do a three way handshake. It looks like this. I send a sin request. The server will then respond back with a sin act request. And then I respond back with an act. And then my connection is established and we can communicate. But see, hackers saw this and they go, hey, we can screw this up a little bit. Let's do that. This attack is called a sin flood attack. We're going to take advantage of the three way handshake. We're basically going, hey, nice to meet you. Oh, and we're doing that like 50,000 times. But now I'm going from just a regular person to a hacker. And what I'm going to do now is send that sin request to open a connection, but then just not reply back. But what I'm going to keep doing is sending a ton more sin request. I'm going to keep sending them like crazy, sending them. The goal here is again to overwhelm the server with so many connection requests that he can't handle it because you know, a server can only handle a certain amount of connections before he's like, ah, so let's do that. We use our same tools before HPing three. It's a powerful tool. Now before I use the switch, dash one to make it an ICMP ping, I'm not going to do that now. It defaults using TCP, which is what we want to use three way handshake, man. I'm going to attack port 80 because this is a web server we're attacking. And then I'll use the switch dash uppercase s. This is for our sin attack. I'm going to do dash dash flood just to kill the server. And of course, my target 10.7.1.50. I want to add one more thing here. I'm going to make it a bit bigger too. Let's add some data to that packet. So I'll do dash D. Let's add 200 bytes. Ready? Set? Go. Now as before, we're not seeing a big hit on the server because it's just me. And it's hard for one person, one computer, one attacker to a overwhelm a server. So let's bring in our friends. Let's take this from a simple DOS attack to a DDOS attack. One server, two server, three server. And that should be enough. Let's take a look now. Okay. He's feeling the pain. Look at that. See, now our packet of punch aren't we? We are overwhelming the server. 20 40 milliseconds of latency. Let's see if the website's even up. He's having a hard time. Not even loading at all. Let me try my iPad here. Yeah, not loading on my iPad at all. Look at this. It's crazy. I finally loaded. So he's definitely struggling. So he has, yeah, he's dying. So again, this is where our attacks become more sophisticated. We're using a sin flood attack to kind of exploit the TCP protocol, the way it's supposed to work. But we make it bad. Doing a lot of pan shakes, new dance move for hackers. Now this works great, but it's not perfect. Let me tell you why. Most servers on the internet are going to have some type of security to protect them, right? And the often comes in the form of a firewall. That's my firewall in case you can't tell what that is. And when we're sending attacks like this, the firewall, he catches on. So we'll say we just start sending a ton of sin flood attacks from a bunch of different machines. It won't take long for the firewall to go, oh, I'm being attacked. I'm going to shut those down right now. Just block the IPs and it can do that quickly, resolve it really fast. And in a lot of cases, these attacks don't even matter. Like it's like swatting a fly for a firewall. It's like, oh, leave me alone. Now here is where the scripts I buy on the dark web come into play. They go far beyond just simple sin flood attacks or pings or anything. They're pretty sophisticated. Let's check them out. So here we are looking back at Sapphire, which honestly is a pretty nasty DDoS attack. And here's why. You know, I said the firewall can detect when an attack is happening and just shut them down, making it harder for attackers to attack. This is where scripts like this come in. So if you attacker once again, me with my beard and coffee, when I run this Sapphire script, it's going to attack the HTTP protocol specifically. This is actually an attack called an HTTP flood attack. And what it will do is it will send a ton of HTTP get request, which are normal things that happen all the time. When you go to connect to a website, you want to access the homepage. You're sending a get request saying get me that homepage and the web server sends it back to you. So it's a legitimate thing. And again, remember, hackers take advantage of legitimate things but make them bad. So what we do with Sapphire as we send not one get request, but a ton of get request. As we do when we do a DOS attacks, but you see these aren't just normal get requests because if we just sent them as regular get request and they were all the same, without firewall catch on real quick, wouldn't they? They would say, oh, these IPs are sending these get request and they all look really similar. I'm going to shut them down. But see, that's where a script like this comes in. And here's what it does. I'll scroll through it here real quick. It pulls all these headers. Like as I'm scrolling through here, these are all different headers. It'll use to construct unique get request, changing the user agents pretty much everything about the request to make it look unique. This script alone can compile 1 million unique get request and just bam, bam, bam, attack. I was moving around a lot. And when I get to the end, you can kind of see the guts of the Python script of how it actually takes that information and it constructs all these get request and attacks. And again, the goal of this script is to overwhelm and confuse the server. Now this guy is bad enough just from one computer, but imagine you have it distributed amongst a bunch of computers. Like, let me try it right now. I'll show you how to run script. And honestly, I told you I got this off the dark web and I did. I paid Bitcoin with that sucker, but then I later found out you can just download these for free on GitHub. So yeah, and this is not the only one. There's a ton of them. Like, you want to see? Check this out. If I jump into my anonymous folder here, look at all these different scripts I have. You may be familiar with a few of these, but man, they're cool. The fun part is we get to not only test them out, but we can go into the scripts and look at how the Python was constructed. How do they do this? And we can learn ourselves, you know? Now, running them is really, really simple. I just do Python, specify the script I'm going to run. So this will be safira.py and then my web server URL. So HTTP, call in for slash and then just put the IP in 10.7.1.50. And it's going to do it. Done. It's starting to attack. Like, that's that easy. Like, weird how easy that is, right? Now, I am doing a DDS attack right now. I have this tool running on all of my servers. What I'm noticing is it doesn't have the effect I was kind of hoping for. I don't see a lot of impact. And I'm thinking a tool like this is meant to be more hidden and more distributed. Or I'm just using it wrong. But I did do some wire shirt captures and I saw the traffic going across. It's not as quick. I don't know what's wrong. It's probably me. So I'll put the link below. You can go in and try these attacks yourself. Pretty much any device that can have Python can run these scripts. And it's kind of crazy. So now if attacks like this need a bunch of servers, a bunch of computers to attack, how do you packers do that? Is it just getting the community up and downloading and running these scripts? Sometimes the majority of the time though, the attackers don't know they're attacking people. They're unaware. They might be your grandma, your mom, your friend, your, your past. Their computer is attacking someone maybe right now and they don't even know. That's called a botnet. See what attackers can do is they can actually send a phishing email or maybe have a fake website and they and people will download this malware and run it. And they don't know what it is. And it might even stay hidden for a long time. But it actually is malware that when called upon can run an attack like this on a server. And that's a botnet. It's an army of basically zombie computers that have no idea what they're doing. But when called upon they rise and they attack. And this is how some of the most impressive and devastating DDoS attacks have happened. So it got me to thinking, how do they build these botnets? How do they do this? And going down that rabbit hole, I actually built one myself. Now I didn't like program or anything. I found a framework called build your own botnet or BYOB. And it's kind of simple to set up a little scary how simple it is. Check this out. And honestly it has this beautiful gooey built into it. It's awesome. And yeah, it took this up. I'll go to my control panel. And if I scroll down here, I have my bots. This is my command to control server and this is how I can call upon my bots to do something. It's common thing. So setting these things up is not that hard. This is one of the cooler frameworks I found because this open source and it's meant for education and you should be used for education but there's really nothing stopping you from using it for nefarious things. So don't do that but it's still neat. But here I have my three bots and these could just be victims that I tricked into downloading some software. Now these are my servers. I didn't trick anybody but I can do whatever I want here. I've wanted to get a shell access to these guys. I can't. Just click on one of their shells here and I've got a TCP reverse shell. I'm in the server. Which is crazy, right? Now how do I make these bots become bots? That's the scary part. It's not that hard. If I go to my payloads, this is where I can generate a file that they can just have run on their computer and they become a slave a zombie to my command and control center. It's honestly just a Python script. I go in here and say, yeah, I want a Python script and it generates one for me. If I run that Python script on a computer on a Linux server, it will just become my zombie. Maybe you want to do Windows servers or Windows machines. You can do that too. Operating system, Windows. And generate one. It's an EXE. It's just incredible and it just takes control. It's crazy. Now what can you do with that? Well, whatever you stink and what? If I go back to my control panel here, I have a bunch of built in post exploitation modules, which means things I want to do to these servers after I have control. And if I select, look at this. I've got a miner, a cryptocurrency miner. I could run on all my zombies. By default, it mines a minero. You can make some money. Keylogger, you can escalate privileges, packets and effort, webcam, iCloud. And those are just built in. You can build your own. You can run all the attacks I downloaded from the dark web here. That's scary, right? Like that's crazy. I always wondered how hackers did this. Apparently, it's kind of an easy framework and yeah, you still have to go through the process of writing malware. I can get past firewalls and antivirus, but still the frameworks are pretty easy to set up. Now, if you want to do this yourself, if you want to set up your own botnet and control some servers and do some cool stuff, I've got to link below with the walkthrough. You can try it out. It's neat. It's really neat. So DOS attacks and DDoS attacks are some of the worst things we have to combat in IT. So as a person like yourself, maybe you'll want to become a hacker and ethical hacker, obviously, your job is to help companies be prepared for these situations. Now, I think rarely you're actually going to perform your own DDoS attack or DOS attack on a client, but you still need to come prepared to understand how those attacks work. Because they may call upon you to help them prepare or maybe recover from an attack like that. So what can you do? Well, the biggest thing is to make sure your network is secure. Get a firewall in there. Make sure that firewall is up to date and you've got best practice there. Also, man, patch all your stuff, your servers and any application you have, patch it with all the latest OS releases. Hackers are fast, but you know what? The good guys catch up just as fast, too, hopefully. And then lastly, really, no network is safe from a DDoS attack. If an anonymous or whoever it is can get enough people attacking one server or one firewall, one network, they can probably take it down. They've taken down some of the largest networks with some of the best security. The best way to mitigate that is just make sure you're as redundant as possible that you have multiple servers, multiple firewalls. Doing those best practice things will help keep you safe, not foolproof, but safe. And the good news is with people moving to the cloud and relying on cloud-based services, there's a lot of protection out there for DDoS. So if you have your stuff on Amazon, AWS or Azure, or use a service like Cloudflare that sits in front of your website, you're much less prone to DDoS attacks. Not immune, but you're safer. Now speaking of attacks, if you want to practice and you want to practice not in your own house, but you want to practice on a live website, I'd like you to do that. I'm giving you a website to attack and I want to see if you can bring that down. Now I'm only giving you permission to attack my website, this specific URL and that's it. So don't go attacking anyone else, but the URL is ddos.networkchuck.com. If you can bring that site down, that'd be really cool. So try to access it now, see if it works. And if it does work, do some attacks on it. I give you permission. Anyways, guys, that's about it. If you want to dive deeper into ddos, ddos attacks, I highly encourage you to go check out it pro TV. That's what I use to learn about this stuff and then go deeper than I do. So go check them out. Link below. You get 30% off forever. And of course, don't forget to like this video. If you like it, subscribe if you like what I'm doing here. And consider joining the membership. And yeah, that's all I got. Again, disclaimer, don't attack anyone without permission. You can get in trouble. You can go to jail. So just be careful out there. And yeah, that's all I got. I'll catch you guys later.