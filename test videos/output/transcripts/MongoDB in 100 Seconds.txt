 MongoDB is the world's most advanced and popular document-oriented database. It was created in 2007. After the team at DoubleClick, a company serving 400,000 ads per second, faced issues with scalability and flexibility using existing database systems. This inspired them to design a database where all data is stored in JSON-like documents, which are organized into collections where they can be queried. Unlike a relational table, a predefined schema for a collection is optional, which allows you to evolve your data structures rapidly without running complex database migrations. But more importantly, it allows data that's frequently accessed together by an app to be stored in the same place. This makes read operations extremely fast because no joins are required. It's like having a fully assembled car ready to go, as opposed to joining together a bunch of separate parts. And that also makes the database much easier to scale horizontally via sharding. Unlike relational tables, collections are self-contained, making them much easier to work with in a distributed system. That's why they call it Mongo. It's designed for humongous workloads. When you create a new document in MongoDB, it's assigned an object ID that's unique to that collection. Inside the document, you can define multiple fields, where the value might be a variety of different data types, like a string, array, object, and so on. Now to work with your data in any programming language, the query API is used to perform basic read and write operations, as well as complex queries and transformations across the database. To optimize performance, secondary indexes can be created to make common queries extremely fast. It also supports geospatial queries to find all the documents near a geographic location. In addition to queries, you can also create data aggregation pipelines, which can group documents together and reduce them to a single result. MongoDB is free to use and can be self-hosted, but the quickest way to get started is with the free tier on Atlas. It scales automatically and provides a UI where you can interact with your data, plus a ton of other awesome features like full-text search that leverages the power of Apache Lucene. In addition, they just launch a serverless option, where you only pay for the exact resources that you use, and Atlas has other essential features like triggers that make it easy to run serverless functions when your underlying data changes. Then there's Realm, which is a Firebase-like platform that makes it easy to sync up your data with a front-end application in real time. This has been MongoDB in 100 seconds. Let me know if you want to see a full tutorial in the comments. Thanks for watching, and I will see you in the next one.