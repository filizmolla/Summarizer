I think I have a Docker addiction. I use Docker for everything. So in this video I'm going to show you everything. I use Docker for 18 ways. Some are awesome, some are kind of weird. That's so cool. Let's get started. And by the way, this is a new coffee maker I have called the gina. It's a smart coffee maker. It has an app. Let's start brewing Now, by the way, this is not sponsored by Gina. I'm going to quickly grab a mug while it's still brewing you right back. Oh, I missed the ding. Okay, it's done. Oh, and by the way, this video is sponsored by Docker, which is kind of cool because I would've talked about them for free. Don't tell them that. Now, most of the containers I show you will work anywhere, Mac, Linux, windows, and what I'm using Windows with WSL two. Number one is pretty crazy. You can run a web browser inside a Docker container. And I'm not talking about A CLI browser, a full gooey browser. Check this out. Oh, forgot to launch my wsl. I'm running Ubuntu with Docker install. We'll use this Docker run command and we're pulling a container from Linux server.io. You're going to see them again because they make amazing containers. Now one thing I do want to change is the website we go to when we launch our container. Let's change that academy.network chuck.com. Alright. Oh, and one last thing you want to notice. Look at the port mappings. We're doing a one-to-one mapping between port 3000 and Port 3001. Now let's launch it. Ready, set, go. Quick little coffee break while it pulls down that container image and it's done. Let's do a docker PS to make sure it is running somewhere. Yes it is. Now this might feel weird. We're going to launch our browser to launch our browser. So go ahead and launch any browser you have and we're going to navigate out to local host Port 3000. Look at that. This is a browser inside a container. That's pretty fast. Now the reason we have this gooey access is thanks to Chasm VNC. This is an open source tool that Chasm makes and the company Chasm actually runs the network Check cloud browser, which will also launch a web browser inside a container like this, except this is run on another server somewhere else in the world and it's meant to be ephemeral. So it's great for security research, but we're essentially doing the same thing here. And because we're running this web browser inside a container, it inherits all the amazing isolation features of a Docker container, even though it feels like you're just using your web browser. Now I know, I know there's a bit of nuance to how secure this is. Just know in general, in most cases, a Docker container is separate from the os it's running on and has inherent security. So calm down. I saw you commenting. I saw you. Anyways, let's move on to the next one. Obsidian is my favorite notes application of all time. I use it every single day. You can run obsidian inside a Docker container and get gooey access. Check this out. We have another tool from the Linux server.io folks, they're kind of amazing and all we have to change here is our report mappings. If you launch that docker container for Firefox earlier, you want to make sure that your host port is not stepping on the toes of your other host ports. By default, it's programmed to use the same ports. Go ahead and change your host ports to be something else. So we might say our port 3003 mapped to 3000 and our port 3004 mapped to 3001 inside the container. This is our port, this is the container port. Everything else is good. Hit enter and go. Now just know every one of these containers does have options. You can do things like volume mapping where you can map a folder on your local machine to this container, making sure your data stays consistent no matter what your container's doing. Okay, it's done. Let's do a docker ps. There it is. And we're going to navigate out to port 3003 in our browser. Yes, we're going to be using our browser once more. 3003 I said yes, and look at that using chasm VNC. Again, we'll do a quick start on obsidian and here we are. Now, full disclosure, some of these apps I don't use every day or ever. I just wanted to show you these things because they're very, very cool. I mean, being able to run an application like this inside a docker container that gives you a level of isolation and security that I'm excited about. You would normally get this type of isolation through a virtual machine or using an OS like cubes, but that's kind of a pain. Docker is much more lightweight and as you can tell, it was much easier to launch this. Now sticking with our themes of running an app inside of Docker container, we have Libre office, the open source version of Microsoft Office. This one is actually pretty useful. Again, thanks to our friends@linuxserver.io. I will have their website below if you want to look at all the documentation and options you have for this. All we'll have to change now because we're running two other containers at this point is our host port. We'll do 3005 and 3006. I got to make sure I remember which ones I use and that's all we need. Hit enter and it just goes to town. I love how simple and amazing docker containers are. This technology never ceases to amaze me and it's so approachable too. If you're learning it or really learning anything. I would honestly start with Docker containers because you can do so much. Okay, mine is done. Type in docker ps it's running Same stories before. Let's launch our web browser and go out to port 3005 this time at local host and there's Libre office, a full Microsoft Office alternative right here in my browser. We'll do a new spreadsheet. Now this one I actually might end up using Folding at home. Do you remember that? I used to run this on my PS three all the time. Essentially, when your system is idle, folding at home, while use your system to help aid cancer research or any other project that's helping humanity, we can help humanity with our docker containers. Let's try it out yet another Docker one command. And yet again thanks to our friends at Lennox Server io. A couple of things here. You could set your account token and machine name right now, but you don't need to. You can log into your account here in a moment. And yes, folding at home normally does include signing up for an account. It's free. And that's all I have to say about that. Now there is one more thing here. I added some options to enable my Nvidia GPU. If you have one, you might want to run these switches. If you don't, don't use 'em. This will enable GPU acceleration for your folding at home and you'll also need the NVIDIA container runtime. It's provided by NVIDIA for free and I hate that this link is continued. On the next line, it's going to draw squares around both. And actually, I don't know if I have this enabled. I'm going to install it again just to make sure you can follow along. I think I have done this before when I installed my AI tools, but we'll grab the snippet for installing via a PT and give it a whirl. We'll run our update, then we'll install the NVIDIA container toolkit. Okay, I don't think I had it. Now let's run our command. Docker, run all that stuff. Ready, set, go in. Valid runtime Nvidia. Okay, let's restart my WSL instance. WSL. Shut down and we'll launch Ubuntu once more. Let's try it again. Same response. I'll check Nvidia. SMI. Okay, that's great. I can see my GPU. Oh, I forgot some commands you've got configure some stuff. Come on Chuck. Read the rest of the documentation. No, I want to fool around and break things. Okay, that seemed to work. I couldn't find it because the config wasn't there. That makes a lot more sense. We're starting docker now. And now let's try it again. Here we go. Okay, that's better. Whew. Had me worry there for a second. Let's do a dock. PS folding at home is running on port 73 96. Let's go local host 7 3 9 6. Okay, now you can tell I had some testing before. Let's edit my machine settings here. Enable my GPU. Don't give it all my CPU. Save it and we'll start now. It says GPU zero. I don't know why it's saying that because it's right here, sir. Right now I'm helping, helping cancer research. I had no idea you could use folding at home with a docker container. It's so cool. Now you know I love using the CLI and I don't mind at all using and managing docker from the CLI, but sometimes it's nice to have a gooey, a place to see what's going on and that's why I love using Docker desktop. It's available for Mac, Linux, and Windows, right? Let's go double check. Docker desktop. Yeah, you better believe it is for everything. Now this is run by Docker and if you don't have Docker installed like actual Docker, it'll install it for you. But if you do already have Docker installed, like me running in WSL two, it'll use that. So check this out. I already have it installed. I'm going to run it right now. Docker desktop and show you what I'm talking about. Now, currently it doesn't see any of my containers. Let's go see if we can fix that. It should look at WS L two. It seizes my images. Let's go to settings, resources. We'll go to WSL integration. Oh, sure enough, it's not using my default distro apply on restart, where my containers go. When I did that, it deleted all my containers. Oh well you live, you learn. So don't do that unless you don't care about your containers, which honestly should be fine. Containers are designed to be ephemeral, temporary. Lemme run Firefox again. Okay, it's running and it should be here inside Docker desktop. Sick. I want to spin my other guys up too. They feel lonely. Alright, now we got some friends. Alright, so Docker desktop is cool because we can see some things really quickly. CPUs, container memory usage, all this stuff. And if you're running your docker containers, like apps like I am, that's a nice view. But you might be thinking, Chuck, hold on. I saw a video you did one time with a tool called Poor Retainer and that thing was awesome. That was the best way I've ever seen to manage a Docker container environment. You know what? I agree. Hey, what's cool is you can actually add poor retainer inside Docker desktop. Check this out. Docker desktop has what's called extensions. They extend the functionality. Let's click on it right now and we'll search for poor retainer. There it is. This is easy. Watch this. Click install. It's being added right now and that's it. So it's running right here and all I'll have to do is click on that guy, go home and here are my environments. Let's just jump into our local environment. Poor, I love it right here in Docker desktop. So as you run more and more containers, you are, you're watching this video, you're going to run more containers, you're going to go crazy. You won't be able to contain yourself. Docker desktop is an excellent way, especially with poor Taner to manage what's going on. CLI is fun. Yeah, come on, we're friends there. We agree, but sometimes you want to see some stuff. Get a nice view. Now speaking of seeing some stuff, this one's kind of weird. We're going to take a trip to a website. Actually, we're going to take a trip to the Danger Zone. This tool called the Danger Zone. It is amazing. It'll take potentially dangerous PDFs, office documents or images and convert them into a safe PDF. Now, Chuck, why are you talking about this? It uses a container to do this. So it's sandboxed. This is just an app you install. Check this out. I feel like I said check this out a lot in this video. I apologize. Here's what it does. You give it a document you don't trust, you don't know. It could be an email attachment, it could be a PDF, it could be anything. Instead of a sandbox, it'll convert that sucker to A PDF and then it converts that PDF into raw pixel data and then in a separate sandbox it converts it back to A PDF, removing any kind of danger that might be in that document. That sounds awesome. And you can install it for pretty much any os I think, right? Yeah, it's everywhere. And here's Windows for us. Now, quick thing, it does require Docker desktop to run the sucker. It's got to be running at all times. Thankfully we just talked about that. So you're good. Let's install the danger zone. That's such a cool, fun idea. I love this typical installation. Let's go little coffee break in between. By the way, as we're trying to avoid being hacked right now, have you hacked the YouTube algorithm today? Let's make sure you do hit that like button subscribe, notification bell comment. You got to hack YouTube ethically. Of course, I haven't said that in a while. Okay, it's done. Click finish. Let's go ahead and launch a danger zone. And there it is. Okay, so everything looks good, no warnings. All we have to do is select these suspicious document. Let's go find one. I don't have anything suspicious, at least I don't think I do. I'll just find something random. It'll do images, right? What are the limitations here? It'll do, yeah, images. I think this is a picture of John Hammond and it's going to do its thing. It's going to convert it to a safe document. What I want to do is show you my running containers because it's going to do some fun stuff. Watch this. Convert to Safe document. Look, it's running containers, boom, sandbox, boom, sandbox. That's really neat. And there's John Hammond with all the viruses removed. He looks great. That's a really fun tool and I love that it uses docker containers on your system. I mean, this is probably my favorite way to use Docker. It's not very flashy, but it's super helpful because I use a lot of tools on a daily basis. A bunch of tools that I download from GitHub that I'll install in my Linux environments like WSL two. And they'll have just a variety of different dependencies and sometimes these tools will step on each other's toes and break everything. All that to say, I like to install my tools and set them up inside their own Docker container. And if I love the tool, I'll use a Docker file to create an image for that specific tool. So essentially any tool I'm going to use if I love it, for example, fabric, I did a video on fabric, see it up here. It's a great AI tool. And they recently changed the architecture from Python to go. I'm like, okay, well I got to go install, go and change my entire environment. Or I could just run it inside a Docker container in its own separate environment. That doesn't interfere with anything else I have going on way better. So I define that in a docker file. Here's what it looks like. And by the way, this is kind of a way to build your own docker containers. Not the only way by far, I think the best way. And when you know how to build your own containers, it's like gaining a superpower. It really is. I'm going to throw this code into my browser base, obsidian inside a container. God, that white is blinding though. Oh my gosh, I can't do anything but dark mode now. Oh my gosh, I can see. So here's an example of a docker file. In full disclosure, I use Chad TBT to help me build this. And that's kind of the world we live in. Now, you don't have to start from scratch on anything. Don't waste time. Use ai, let it make you better, but also you should understand what's going on. So use AI to explain it to you. Now here, this docker file is defining how to build a container image. For example, it's going to use a Golan image, an image from Docker hub that has Golan already installed. And then we're doing something like setting the working directory, adding some packages, cloning the tools from Daniel Messer's, GitHub, running it or installing it and setting some environment variables. Now this is my one unique example. You don't have to copy this tit for tat. I just want to show you kind of what it looks like to build your own container and use it like an app. So here in my WSL two Linux Ubuntu Land, I'll make a directory fabric tool. Jump in there. Nope, wrong directory. There we go. And I'll create a file called Docker file. You'll want to name it just like this. And I'll paste my config in there. Looks good. Ctrl xy. Enter to save. And then with one command, I can create an image from that docker file and the command will be Docker build. We'll do dash t and name it. I'll call it the fabric. And then I'll put a.at the end to tell it to look here for the docker file. Ready, set, go. And it's building it right now. It's actually making a docker image, one that you might download from Docker hub and it's installing and creating everything I need right now. And that's it. If I do a docker image, LS, there it is right there. The fabric created eight seconds ago. Oh yeah. Now let's create a container with that image and I might run a command like this Docker run with the dash dash RM command to remove the container when I'm done with it. And then it's just running the fabric command from that container so I can do things like, this is so cool. H, just to get help for that command for fabric that's running inside the container and giving me the output I can do, Hey, list my patterns. Cool. I can use the pattern. Lemme say like, Hey, tell me a story about drinking coffee and having the best day ever. Make it four sentences and then I'll paste my command in. Woke up early, brewed a perfect cup of aromatic coffee, sip. Slowly watched sunrise, felt peaceful and invigorated coffee in hand, met friends for a laughter filled lunch. Evening ended with a satisfying book and quiet reflection. Now that's a day. I'm doing this on Saturday now to make it where I don't have to run that same docker command over and over. I can add an alias and my Bash rc. I'll just call it FB for fabric. Save that. Refresh my terminal. Let's try it out. Let's say telling me something funny. Pipe it into fb. Yes. How cool is that? Now watch this. I'm going to have it summarize an article and we'll see the container pop up. I'll grab a random one from a BLE bean computer or something. Now here's one about patch Tuesday and check this out. The container's running over here and it's summarizing my stuff over here. A containerized app just like that. How sick is that? Oh my gosh, I love it so much. Oh, that was fun. And that's not fake enthusiasm. You guys maybe wonder, is Chuck really like this? Is he faking it for YouTube? No. Ask my friends, ask my family. I'm like this all the time, especially with coffee. Now sometimes when you're building your images, which then you'll make your containers, they could be insecure. That's why I love Docker's new feature here called Docker Scout. Now container security is a big deal. As you can see, it's so easy to deploy containers and pull a variety of images from Docker hub. But you know what? Those images could be out of date and secure. They could be placed there maliciously. You don't know that. So if the clicks on Docker scout here, I can analyze my images. Let's analyze the one I just made, the fabric. Let's see if it's fine. Analyze. It's doing it. Alright, we did that one. Let's do danger zone and let's do obsidian. Now I can go to my images up here, jump into any one of them. Like let's go to danger zone. Oh, it's still analyzing right now. Let's go back and look at one that's already done, like the fabric, check it out. It analyzed it and found that there's no vulnerabilities. I can see the images used with this, the packages installed, it checks all that stuff to make sure it's secure. That's amazing. You can see all the layers. Let's go check on danger zone. Whoa, danger zone. It's dangerous. Okay, it found vulnerabilities in these packages. There's a lot of, or there's six. Let's click on that. Yeah, and it tells you the cvs right here, that's pretty high. What's up with this? Maybe this is actually the danger zone. Anyways, you stalker scout because you don't want to get hacked. It even tells you there's a newer image available for images you're using. This is cool. Hey, network. Chuck from the future here. Docker told me, Hey Chuck, you didn't talk about everything we wanted you to say about Docker scout. I get it. There are some cool things I didn't mention. Can I show you those real quick? Check this out here in Docker desktop. They do have a terminal now, which is pretty cool. I'm going to use Docker Scout with Docker Scout, CLI, and I'm going to use one of their test repos. First of I make sure my organization is enrolled the network. Chuck, this is my GitHub repo done. And now let's scan some stuff. We'll do Docker scout CVEs. We'll use the option only package and we'll say express. Okay, yeah, I found some stuff and I love doing things from CLI. It's just more fun. Let's try and fix one of these, like this right here. It seems pretty easy. All we have to do is update a version, change it from 1, 2, 3 for express. Save that sucker rebuild, and let's analyze again. So we fixed the high severity one, but it's like, Hey, update it again because there's some a medium CVE. Actually, it's going to bother me. I'm going to fix it now. What version did it say? It said at least get to four 20. We'll push V three and now let's analyze no vulnerable packages detected. Now another thing I did not mention is you can view all this from a really fancy, nice dashboard. Get a bird's eye view of all your stuff. Docker does have a new plan going into effect, a new pricing model. November 15th. Here's all the info here and it seems to be doing what it says. More value at every level. Anyways, that's docker scout. Let's get back to the video. Okay, now we're entering the hacking portion of how I use Docker on a regular basis. Setting up a hacking lab with Docker is the best. Starting with Kelly Lennox, check this out. I massive shout out again to our friends@server.io. This container will also be using chasm V and C. So let's go ahead and change our porch. Make sure we're not stepping on any toes. I forget where I was at. I'm just going to set a high number. I do have this optional config to map some GPU. Goodness. You don't have to do that. And let's launch this bad boy. Here we go. It's going to download the image. It's kind of heavy. It's Cali Linux. It's going to be running inside a gooey container that we can access from our browser, in my humble opinion. And many times if you just need something quick to test out some stuff, this is better than a vm. That took a minute. Let's see if it's running. What am I doing? I can check. Docker desktop. It's running on port 3011. Let's go to our browser. Local host, 3011, check that out. Kelly Lennox, right here in our browser and it just stinking works. And it's actually pretty fast. It's launching Burp like a champ. Oh my gosh. Now I said Hacking lab. Where's the vulnerable machines that we can hack into? That can also be a container. Check this out. Actually, you know what? Before we do that as part of our hacking lab, I want to show off one of my favorite Docker features. I made a whole video about it. I love it so much. And I'm also Network, Chuck. It's Docker Networks. You can create little isolated networks to your heart's content and a variety of ways. I'm not going to dive too deep on that. Again, I had a whole video covering every network, I think. Yes. So check it out up here. But one way I like to do at my Hacking Labs is setting up an isolated network. Because if I'm deploying vulnerable machines to my system here, I want it to be isolated as much as I can be. Anyway. The KL will be Docker Network, create, and you can just create a network like this, like my network. Name it like that. Or you can specify some options like internal, where this will be completely isolated. Now, Docker does not by default. So if you didn't specify that, it would have internet access and access to other stuff in your network. So I'll call this Hacking Lab. If I do Docker network ls, there's my networks. And real quick, I want to add Callie Linux to that Hacking Lab Network, this Command Docker Network Connect Hacking Lab, Cali Linux. I think that's the name of the container. Yeah, there we go. If I do Docker, inspect Cali Linux. Let's check out his networks. Yep, there he is in Hacking Lab, but he doesn't have an IP address. Oh yeah, he does. There it is right there. It's not that isolated network. I can throw a vulnerable container inside that network. We'll do Docker, run Dash RM to make sure it goes away when we're done with it. Do it for Interactive. We'll throw it into Hacking Lab Network. And the machine image is vulnerable. Oh, I sp it wrong. I know I did Vulnerables. There we go. Slash web dash d vwa, which stands for the damn vulnerable web application. It's a web application that's intentionally vulnerable. It's messy. Let's try this out down, because Docker is magic and I think it's almost done or something went wrong. I'm not sure. Is it running? Yeah, it's running. So now this web application's running on port 80. If I go to port 80 here, I shouldn't be able to access it. Yeah, nothing. But if I go through Cali Linux, I should be able to see it just fine. Wait, I don't know the IP address. You know what? That's why it was sitting there. I didn't do a Damon mode. Let's do Docker. Inspect. Let's just do a Docker PS to see what it's running as we'll. Inspect that container. What's your IP address? 1 7 2 19 0 3. Perfect. Let's go there and look at that with a Docker version. You do have to create a database. It does it automagically. Now you get a web app, a hacking web app that's just sitting there. I can't access that from my computer, I don't think. Lemme just make sure I'm not lying to you. Port 80. Yeah, I can't get to it. It's only accessible from Cali Lenox because it's connected to that network. And that was just seconds. I set up an isolated network. I set up Cali Lenox. I set up this vulnerable machine. And by the way, there's a ton of vulnerable machines out there that are containers. Just deploy them like crazy inside Docker. Now, just after a Docker networks is my other favorite feature. Docker compose because setting up a hacking lab is fun, but doing it one at a time like that, boring, lame. You need to use Docker Compose. Now this is another subject I made a whole video about, but check this out. I'm going to create a new file here in my obsidian in the web. This is what's called a Docker compose file and all that stuff we just did. Setting up a Hacking lab network, deploying Calli Linux, setting up a vulnerable container. It's all defined and declared here. No. What does that mean? Watch this. This is so cool. I'll take this file. I'll make a new directory here in my two Linux. We'll jump into my lab. I'll create a new file and call it Docker compose yml. And I'll paste my config here. Control x, Y. Enter to save. Now watch what happens with one command. Docker compose up dash D, watch this. Boom. It just did everything for me. Just like that. Look at it. It's all here in a little folder too. My lab. There's Cali Linux, there's the vulnerable web machine. Let's go to it. What's the port again? Oh, 3011. There's Cali. Good to go. Let's go see what our IP address was for DVWA 1 7 2 19 0 2. Perfect. But you can't access that website anywhere else. Only in this little Docker network. My hacking lab all on a web browser. What? And Docker Compose. I mean, and check this out. When I'm done, Docker compose down and it's gone. Not even here. Now, another way I love to use Docker is just trying out new operating systems. So for example, Linux Ubuntu is my favorite. But there's other flavors that are different. They act differently. They have different commands and syntaxes, and we can easily spin those up right now. Check it out. So for example, let's say Rocky Linux. Just go find it on Docker hub. I think all we got to do is do Docker, run Rocky Linux. Let's try it out. Didn't like that. Lemme try a different tag. Done. There was Rocky up there. Let's connect to 'em. And we're in Rocky Linux. Now, up until very recently, you could actually run Mac OS inside a Docker container. I think that went away. This guy here, sit codes. He got a cease and desist or A-D-M-C-A take down message. Me see? I think it's here somewhere. Yeah, from Apple. They're like, dude, stop putting our OS out on the internet for anyone to use inside a container. But I think you can still run it somehow. Lemme see. Alright, I'm going to risk it and try to run this here. Apparently this is an updated version and if my computer breaks, it's your fault. Kind of scared. Let's roll with it. Oh, that's heavy. It's going to take a minute. All right, so something's happening there. Let see if it's running. It's not. Okay, so let me see what's going on. I'm going to ask Chad. GBT. Alright. It could be that that port is being used up. Let's see. Let's try a different port and see if this works. It doesn't like that. Alright, we're going to use the host adapter. Is it doing it? So what we're doing now, instead of exposing a port, we're just going to use the host network adapter. Oh, what's happening? Hopefully I'm not getting hacked right now. Oh my gosh. Something's happening over here in Kemu. What? Let's go. Oh, I don't think I have mouse access. Okay, here we go. I already feel like this was a victory. That was very much a Mac login screen or a boot screen. Apple, I love you. Don't come after me. I have an iPhone. See, and an Apple watch. I just love you so much. I can't contain myself. That's so cool. Oh, alright. I'm in recovery right now. I don't think I want to try and reinstall, but can I just go to Safari? That'd be kind of funny. Yeah. Okay. It's having a fit. It probably hates this. Okay, I want to try and reinstall Max, just because I'm so curious what's going to happen. This is nuts. I read a story about this. I didn't know it actually gave you a gooey and it's using X 11 forwarding. Just seeing the Apple logo is just crazy to me. Alright, let's reinstall. I've got the spinning wheel, the beach ball. Yeah, I agree. Yep. Okay. Yeah, that. Oh, it's locked. Okay, so we hit the end of our road. I'm not going to try and do anything else. I'm sure we could play with it a bit more, but that was pretty fun. Let's end this party and delete all these things. Actually, I'm curious, what does Docker scout have to say about this? Okay, well it's analyzing that you could actually run a raspberry pie and a docker container. Here's the repo right here. Oh, I love the logo. Yes. Alright. I'm just going to run it. Run this. See what happens. What's the worst that can happen? Okay. It said no file system detected, but no, it's pulling out the Raspbian buster light image right now. Okay. Did it do it? It's doing something. Raspbian buster. Oh my gosh. This is Raspberry Pi. I know my pie. I don't like seeing failed. Oh, come on. Please work. Please work. It has an IV address. We're here. What's the login? Is it pi? What's the login? Oh, is it? I don't remember. Oh, it's Pi Raspberry. Pi Raspberry Pi Raspberry Raspberry Pi. Running inside a container. Sorry, I'm a little excited. Oh, sure enough. We're running Raspbian in a container. Crazy. Oh, okay. Look, we got our stuff about this guy. Vulnerabilities galore. Yeah, he's out of here. Yeah, out of here buddy. See a Sonoma by Sonoma. I can't believe I'm using a raspberry pie in a container right now. That's so cool. The last one I want to show you is a cool thing called it Tools that I found. And when I say I found it, I actually lost it. I have to go find it real quick. Where did it go? Oh, I think I found it. Yeah. Here it is. I think this is it. Alright, lemme get out of here. No, how do I get out? All right, I'm just going to go stop the container. Okay, cool. Let's try this. 80, 80. I think this opened for me. Let's go see what happened. Local host 80 80. Look at all this. So this is a bunch of tools that are for IT people. So for example, you've got B crypt, HVAC generators, date time converters, RSA, key Pair, generators. I mean, this is actually pretty cool. Token generator, refresh. Refresh. This is nifty Cron tab generator. I mean, we got chat GPT now, but this is pretty cool though. IP address converter. There are so many things emoji picker. That's actually cool. We could spend all day here. Text diff. That's neat. Outlook, safe link decoder. Oh, that's actually handy. QR code generator. Docker, run to docker, compose converter. Could that be any more? Perfect. Why did I just quote Chandler? We've been watching a lot of friends lately, so I just realized this video is probably very long. Lemme know if you like this style. I made it more conversational. Thanks again, a docker for sponsoring this video and making it possible. And I would've made the video anyway if they hadn't have sponsored this. I just love Dockers so much. That's all I got. I'll catch you guys in the next video. Yeah, and I'm not sure if that was 18. I lost count.